{"version":3,"sources":["components/MainPage.js","containers/VisibleMainPage.js","actions.js","components/Problem.js","containers/VisibleProblem.js","components/Stopwatch.js","components/Practise.js","containers/VisiblePractise.js","components/Summary.js","containers/VisibleSummary.js","components/App.js","serviceWorker.js","reducers.js","index.js"],"names":["MainPage","props","onSubmit","e","onSetup","state","preventDefault","console","log","history","push","getChoiceValue","setState","op","target","value","num1Len","num2Len","this","clearSetupInfo","className","htmlFor","type","min","max","placeholder","id","onChange","parseInt","required","name","checked","Component","withRouter","VisibleMainPage","connect","dispatch","info","addSetupInfo","Problem","setTimer","showResult","interval","setInterval","timeTaken","computeResult","res","num1","num2","onEnter","keyCode","alert","time","minutes","Math","floor","seconds","addProblem","updateResult","nextProps","nextState","stopTimer","clearInterval","toString","length","padStart","icon","faCheck","style","color","marginLeft","faTimes","display","onKeyDown","VisibleProblem","problem","StopWatch","passCurrentTimeToParent","hours","trim","currentTime","calculateTime","stop","Practise","genProblems","i","random","updateStore","rightAns","totalRightAns","stopStopWatch","stopProblemTimer","window","confirm","addRightAns","addTimer","solvedTime","clearProblems","setupInfo","undefined","onClick","VisiblePractise","Summary","problems","margin","to","marginTop","map","index","VisibleSummary","timer","App","path","component","exact","Boolean","location","hostname","match","arthPracs","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce0a24d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass MainPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            num1Len: 1,\r\n            num2Len: 1,\r\n            op: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.clearSetupInfo();\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        // call props.onStart\r\n        this.props.onSetup(this.state);\r\n\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        this.props.history.push('/practise');\r\n    }\r\n\r\n    getChoiceValue = (e) => {\r\n        this.setState({ op: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n                <h1>Arthimetic Practise</h1>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"num1Len\">Num1 Length</label>\r\n                        <input type=\"number\" min=\"1\" max=\"10\" \r\n                                placeholder=\"Enter no. of digits\" value={this.state.num1Len} \r\n                                id=\"num1Len\" onChange={ e => this.setState({ num1Len: parseInt(e.target.value) })}\r\n                                className=\"form-control\" \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"num2Len\">Num2 Length</label>\r\n                        <input type=\"number\" min=\"1\" max=\"10\" \r\n                                placeholder=\"Enter no. of digits\" value={this.state.num2Len}\r\n                                id=\"num2Len\" onChange={ e => this.setState({ num2Len: parseInt(e.target.value) })} \r\n                                className=\"form-control\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"add\" \r\n                            value=\"+\" checked={ this.state.op === '+' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"add\">\r\n                            +\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"subtract\" \r\n                            value=\"-\" checked={ this.state.op === '-' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"subtract\">\r\n                            -\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"multiply\" \r\n                            value=\"*\" checked={ this.state.op === '*' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"multiply\">\r\n                            *\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"divide\" \r\n                            value=\"/\" checked={ this.state.op === '/' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"divide\">\r\n                            /\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Start</button>\r\n                </form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MainPage);","import { connect } from 'react-redux';\r\nimport { addSetupInfo, clearSetupInfo } from '../actions';\r\nimport MainPage from '../components/MainPage';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetup: info => {\r\n            dispatch(addSetupInfo(info));\r\n        },\r\n\r\n        clearSetupInfo: () => {\r\n            dispatch(clearSetupInfo());\r\n        }\r\n    }\r\n}\r\n\r\nconst VisibleMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n\r\nexport default VisibleMainPage;","export const ADD_SETUP_INFO = 'ADD_SETUP_INFO';\r\nexport const ADD_PROBLEM = 'ADD_PROBLEM';\r\nexport const ADD_RIGHTANS = 'ADD_RIGHTANS';\r\nexport const ADD_TIMER = 'ADD_TIMER';\r\n\r\nexport const CLEAR_SETUP_INFO = 'CLEAR_SETUP_INFO';\r\nexport const CLEAR_PROBLEMS = 'CLEAR_PROBLEMS';\r\n\r\nexport function addSetupInfo(info) {\r\n    return {\r\n        type: ADD_SETUP_INFO,\r\n        info\r\n    }\r\n}\r\n\r\nexport function addProblem(problem) {\r\n    return {\r\n        type: ADD_PROBLEM,\r\n        problem\r\n    }\r\n}\r\n\r\nexport function addRightAns(rightAns) {\r\n    return {\r\n        type: ADD_RIGHTANS,\r\n        rightAns\r\n    }\r\n}\r\n\r\nexport function addTimer(time) {\r\n    return {\r\n        type: ADD_TIMER,\r\n        time\r\n    }\r\n}\r\n\r\nexport function clearSetupInfo() {\r\n    return { type: CLEAR_SETUP_INFO }\r\n}\r\n\r\nexport function clearProblems() {\r\n    return { type: CLEAR_PROBLEMS }\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Problem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timeTaken: 1,\r\n            res: 0\r\n        };\r\n    }\r\n\r\n    setTimer = () => {\r\n        if (!this.props.showResult) {\r\n\r\n            this.interval = setInterval(() => this.setState((state, props) => { \r\n                return { timeTaken: state.timeTaken + 1 } \r\n            }), 1000);\r\n\r\n        }\r\n        \r\n        this.computeResult();\r\n\r\n    }\r\n\r\n    computeResult = () => {\r\n        let res;\r\n\r\n        switch (this.props.op) {\r\n            case '+':\r\n                res = this.props.num1 + this.props.num2;\r\n                break;\r\n            case '-':\r\n                res = this.props.num1 + this.props.num2;\r\n                break;\r\n            case '*':\r\n                res = this.props.num1 + this.props.num2;\r\n                break;\r\n            case '/':\r\n                res = this.props.num1 + this.props.num2;\r\n                break;\r\n        }\r\n\r\n        this.setState({ res });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        if (\r\n            this.props.num1 === nextProps.num1 && \r\n            this.props.num2 === nextProps.num2 &&\r\n            this.props.stopTimer === nextProps.stopTimer\r\n        )\r\n            return false;\r\n\r\n        if (this.interval && !this.props.stopTimer) {\r\n            clearInterval(this.interval);\r\n            this.setState({timeTaken: 1}, this.setTimer);\r\n        }\r\n        \r\n        if (this.props.stopTimer) {\r\n            clearInterval(this.interval);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval)\r\n            clearInterval(this.interval);\r\n    }\r\n\r\n    onEnter = (e) => {\r\n        if (e.keyCode === 13) {\r\n\r\n            if (e.target.value === '') {\r\n                alert(\"Please enter a number!\");\r\n                return;\r\n            }\r\n            \r\n            let timeTaken = `${this.state.timeTaken}s`;\r\n\r\n            if (this.state.timeTaken >= 60) {\r\n                let time = this.state.timeTaken / 60;\r\n\r\n                let minutes = Math.floor(time);\r\n                let seconds = Math.floor((time - minutes) * 100);\r\n\r\n                timeTaken = `${minutes}m ${seconds}s`;\r\n\r\n            }\r\n\r\n            this.props.addProblem({\r\n                num1: this.props.num1, \r\n                num2: this.props.num2,\r\n                op: this.props.op,\r\n                res: parseInt(e.target.value), \r\n                timeTaken,\r\n            });\r\n            \r\n            this.props.updateResult(this.state.res === parseInt(e.target.value));\r\n\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"problem\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <h3>{this.props.id}.</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1\">\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <h4>\r\n                            {\r\n                                this.props.num1.toString().length < this.props.num2.toString().length\r\n                                ? this.props.num1.toString().padStart(this.props.num2.toString().length, '0')\r\n                                : this.props.num1.toString()\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1\">\r\n                        <h4>{this.props.op}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5\">\r\n                        <h4>\r\n                            {\r\n                                this.props.num2.toString().length < this.props.num1.toString().length\r\n                                ? this.props.num2.toString().padStart(this.props.num1.toString().length, '0')\r\n                                : this.props.num2.toString()\r\n                            }    \r\n                        </h4>\r\n                        <hr />\r\n                        \r\n                        { \r\n                            this.props.showResult \r\n                            ?   <h4>\r\n                                    <span>{ this.props.res }</span>\r\n                                    { \r\n                                        this.props.res === this.state.res \r\n                                        ? <FontAwesomeIcon icon={faCheck} style={{ color: 'green', marginLeft: '4px' }} /> \r\n                                        : <FontAwesomeIcon icon={faTimes} style={{ color: 'red', marginLeft: '4px' }} />\r\n                                    }\r\n                                    \r\n                                    { \r\n                                        this.props.res !== this.state.res\r\n                                        ?\r\n                                        <div style={{ display: 'inline-block', marginLeft: '8px' }}>\r\n                                            <span>{ this.state.res }</span>\r\n                                            <FontAwesomeIcon icon={faCheck} style={{ color: 'green', marginLeft: '4px' }} />\r\n                                        </div> \r\n                                        :\r\n                                        ''\r\n                                        \r\n                                    }\r\n                                    <span className=\"float-right\">{ this.props.timeTaken }</span>\r\n                                </h4>\r\n                            : <div>\r\n                                <input type=\"number\" placeholder=\"Please enter your Ans.\" className=\"form-control\" onKeyDown={this.onEnter} />\r\n                            </div>\r\n                        }\r\n\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Problem;","import { connect } from 'react-redux';\r\nimport { addProblem } from '../actions';\r\nimport Problem from '../components/Problem';\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProblem: problem => {\r\n            dispatch(addProblem(problem))\r\n        }\r\n    }\r\n}\r\n\r\nconst VisibleProblem = connect(mapStateToProps, mapDispatchToProps)(Problem);\r\n\r\nexport default VisibleProblem;","import React, { Component } from 'react';\r\n\r\nclass StopWatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.calculateTime, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        if (nextProps.stop === this.props.stop)\r\n            return false;\r\n\r\n        if (this.props.stop)\r\n            clearInterval(this.interval);\r\n        else {\r\n            this.calculateTime();\r\n            this.interval = setInterval(this.calculateTime, 1000);\r\n        }\r\n    }\r\n\r\n\r\n    passCurrentTimeToParent = () => {\r\n        const seconds = this.state.seconds > 0 ? this.state.seconds + 's' : '';\r\n        const minutes = this.state.minutes > 0 ? this.state.minutes + 'm' : '';\r\n        const hours = this.state.hours > 0 ? this.state.hours + 'h' : '';\r\n\r\n        const time = `${hours} ${minutes} ${seconds}`.trim();\r\n\r\n        this.props.currentTime(time);\r\n    }\r\n\r\n    calculateTime = () => {\r\n\r\n        if (this.state.seconds === 60) {\r\n            this.setState((state, props) => { \r\n                return { \r\n                    seconds: 0, \r\n                    minutes: state.minutes + 1 \r\n                } \r\n            }, () => {\r\n                if (this.state.minutes === 60) {\r\n                    this.setState((state, props) => {\r\n                        return {\r\n                            minutes: 0,\r\n                            hours: state.hours + 1\r\n                        }\r\n                    }, () => {\r\n                        this.passCurrentTimeToParent();\r\n                    });\r\n                }\r\n\r\n                this.passCurrentTimeToParent();\r\n            });\r\n        } else {\r\n            this.setState((state, props) => {\r\n                return {\r\n                    seconds: state.seconds + 1\r\n                }\r\n            }, () => {\r\n                this.passCurrentTimeToParent();\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h3>\r\n                {(this.state.hours < 10 ? '0' : '') + this.state.hours}:\r\n                {(this.state.minutes < 10 ? '0' : '') + this.state.minutes}:\r\n                {(this.state.seconds < 10 ? '0' : '') + this.state.seconds}\r\n            </h3>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StopWatch;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport VisibleProblem from '../containers/VisibleProblem';\r\nimport StopWatch from './Stopwatch';\r\n\r\nclass Practise extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            num1Len: 0,\r\n            num2Len: 0,\r\n            op: '',\r\n\r\n            num1: 0,\r\n            num2: 0,\r\n            id: 0,\r\n\r\n            stopStopWatch: false,\r\n            stopProblemTimer: false,\r\n\r\n            solvedTime: '',\r\n            totalRightAns: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.props.clearProblems();\r\n\r\n        this.setState((state, props) => {\r\n            return {\r\n                num1Len: props.setupInfo.num1Len,\r\n                num2Len: props.setupInfo.num2Len,\r\n                op: props.setupInfo.op\r\n            }\r\n        }, () => {\r\n            this.genProblems();\r\n        });\r\n    }\r\n\r\n    genProblems = () => {\r\n        let num1 = 0;\r\n        let num2 = 0;\r\n\r\n\r\n        for (let i = 1; i <= this.state.num1Len; i++) {\r\n            num1 *= 10;\r\n            num1 += Math.floor(Math.random() * (9 - 1)) + 1;\r\n        }\r\n\r\n        for (let i = 1; i <= this.state.num2Len; i++) {\r\n            num2 *= 10;\r\n            num2 += Math.floor(Math.random() * (9 - 1)) + 1;\r\n        }\r\n        \r\n\r\n        this.setState((state, props) => {\r\n            return {\r\n                num1,\r\n                num2,\r\n                id: state.id + 1,\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    updateStore = (rightAns) => {\r\n        // push into the store\r\n        this.setState((state, props) => {\r\n\r\n            if (rightAns) {\r\n                return {\r\n                    totalRightAns: state.totalRightAns + 1\r\n                };\r\n            }\r\n\r\n        });\r\n\r\n        this.genProblems();\r\n    }\r\n\r\n    stop = () => {\r\n\r\n        this.setState({ stopStopWatch: true, stopProblemTimer: true });\r\n\r\n        if (window.confirm(\"Do you want to stop?\")) {\r\n            // push rightAns and solvedTime\r\n            this.props.addRightAns(this.state.totalRightAns);\r\n            this.props.addTimer(this.state.solvedTime);\r\n            \r\n            this.props.history.push('/summary');\r\n        } else {\r\n            this.setState({ stopStopWatch: false, stopProblemTimer: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    (this.props.setupInfo.num1Len && this.props.setupInfo.num2Len && this.props.setupInfo.op) !== undefined\r\n                    ?\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <h1>Practise problems</h1>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <StopWatch stop={this.state.stopStopWatch} currentTime={(time) => this.setState({solvedTime: time})} />\r\n                            </div>\r\n                        </div>\r\n                        <VisibleProblem num1={this.state.num1} num2={this.state.num2}\r\n                                op={this.state.op} id={this.state.id} \r\n                                showResult={false} updateResult={this.updateStore}\r\n                                stopTimer={this.state.stopProblemTimer} />\r\n\r\n                        <button className=\"btn btn-primary\" onClick={this.stop}>Stop</button>\r\n                    </div>\r\n                    :\r\n                    <div> \r\n                        <h1>Sorry, the app isn't set properly.</h1>\r\n                        <small>\r\n                            What's the 1<sup>st</sup> and 2<sup>nd</sup> number's length.\r\n                            <div>\r\n                                What's the operator?\r\n                            </div>\r\n                        </small>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Practise);","import { connect } from 'react-redux';\r\nimport { addTimer, addRightAns, clearProblems } from '../actions';\r\nimport Practise from '../components/Practise';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        setupInfo: state.info\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        addRightAns: rightAns => {\r\n            dispatch(addRightAns(rightAns));\r\n        },\r\n\r\n        addTimer: time => {\r\n            dispatch(addTimer(time));\r\n        },\r\n\r\n        clearProblems: () => {\r\n            dispatch(clearProblems());\r\n        }\r\n    }\r\n}\r\n\r\nconst VisiblePractise = connect(mapStateToProps, mapDispatchToProps)(Practise);\r\n\r\nexport default VisiblePractise;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Problem from './Problem';\r\n\r\nconst Summary = (props) => (\r\n    <div>\r\n        {\r\n            props.problems.length !== 0\r\n            ?\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n\r\n                    <h1 className=\"navbar-brand\" style={{ margin: '0'}}>Summary</h1>\r\n\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <h5 className=\"float-right\" style={{ margin: '0 0 0 60px'}}>Time Taken: {props.timeTaken}</h5>\r\n                        <h5 className=\"float-right\" style={{ margin: '0 0 0 60px'}}>Total Right Ans: {props.rightAns} / {props.problems.length}</h5>\r\n                    </div>\r\n\r\n                    <form className=\"form-inline\">\r\n                        \r\n                        <Link className=\"btn btn-primary my-2 my-sm-0\" to=\"/practise\">Start Again</Link>\r\n                        <Link className=\"btn btn-primary my-2 my-sm-0\" style={{ marginLeft: '4px' }} to=\"/\">Setup</Link>\r\n                    </form>\r\n\r\n                \r\n                </nav>\r\n\r\n                <div style={{ marginTop: '60px' }}>\r\n                    {\r\n                        props.problems.map((problem, index) =>  \r\n                            <Problem num1={problem.num1} num2={problem.num2}\r\n                                    op={problem.op} res={problem.res} timeTaken={problem.timeTaken}\r\n                                    id={index + 1} showResult={true} />\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div> \r\n                <h1>Sorry, the app isn't set properly.</h1>\r\n                <small>There aren't any problems.</small>\r\n            </div>\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Summary;","import { connect } from 'react-redux';\r\nimport Summary from '../components/Summary';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        problems: state.problems,\r\n        timeTaken: state.timer,\r\n        rightAns: state.rightAns\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {}\r\n}\r\n\r\nconst VisibleSummary = connect(mapStateToProps, mapDispatchToProps)(Summary);\r\n\r\nexport default VisibleSummary;","import React from 'react';\nimport VisibleMainPage from '../containers/VisibleMainPage';\nimport VisiblePractise from '../containers/VisiblePractise';\nimport VisibleSummary from '../containers/VisibleSummary';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Switch>\n        <Route path=\"/\" component={VisibleMainPage} exact />\n        <Route path=\"/practise\" component={VisiblePractise} />\n        <Route path=\"/summary\" component={VisibleSummary} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nimport { \r\n    ADD_PROBLEM,\r\n    ADD_RIGHTANS,\r\n    ADD_SETUP_INFO,\r\n    ADD_TIMER,\r\n    CLEAR_PROBLEMS,\r\n    CLEAR_SETUP_INFO\r\n} from './actions';\r\n\r\nfunction info(state = {}, action) {\r\n    switch (action.type) {\r\n        case ADD_SETUP_INFO:\r\n            return action.info;\r\n        case CLEAR_SETUP_INFO:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction problems(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_PROBLEM:\r\n            return [\r\n                ...state,\r\n                action.problem\r\n            ];\r\n        case CLEAR_PROBLEMS:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction rightAns(state = 0, action) {\r\n    switch (action.type) {\r\n        case ADD_RIGHTANS:\r\n            return action.rightAns;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction timer(state = '0s', action) {\r\n    switch (action.type) {\r\n        case ADD_TIMER:\r\n            return action.time;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst arthPracs = combineReducers({\r\n    info,\r\n    problems,\r\n    rightAns,\r\n    timer\r\n});\r\n\r\nexport default arthPracs;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { createStore } from 'redux';\nimport arthPracs from './reducers';\n\nimport { Provider } from 'react-redux';\n\nconst store = createStore(arthPracs);\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}